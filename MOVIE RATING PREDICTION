import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Generate synthetic movie data
np.random.seed(42)
num_samples = 1000
budgets = np.random.randint(1000000, 100000000, size=num_samples)
genres = np.random.choice(['Action', 'Comedy', 'Drama', 'Sci-Fi'], size=num_samples)
ratings = 5 + 0.1 * budgets / 1000000 + np.random.normal(0, 1, size=num_samples)

data = pd.DataFrame({'budget': budgets, 'genre': genres, 'rating': ratings})

# Perform one-hot encoding for the 'genre' feature
data = pd.get_dummies(data, columns=['genre'], drop_first=True)

# Prepare data
X = data.drop('rating', axis=1)
y = data['rating']

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Build and train the model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Calculate metrics
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse:.2f}")
print(f"R-squared:Â {r2:.2f}")
