from sklearn import datasets

iris = datasets.load_iris()
X = iris.data  # Features (sepal length, sepal width, petal length, petal width)
y = iris.target  # Target labels (0: setosa, 1: versicolor, 2: virginica)
import pandas as pd
import matplotlib.pyplot as plt

# Create a DataFrame for the dataset
iris_df = pd.DataFrame(data=iris.data, columns=iris.feature_names)
iris_df['target'] = iris.target
data = pd.read_csv('Iris.csv')

# Visualize the data (e.g., scatter plots, histograms)
# Example: Scatter plot of sepal length vs. sepal width
plt.scatter(iris_df['sepal length (cm)'], iris_df['sepal width (cm)'], c=iris_df['target'])
plt.scatter(iris_df['petal length (cm)'], iris_df['petal width (cm)'], c=iris_df['target'])
plt.xlabel('Sepal Length (cm)')
plt.ylabel('Sepal Width (cm)')
plt.ylabel('Petal Length (cm)')
plt.ylabel('Petal Width (cm)')
plt.show()
from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
from sklearn.svm import SVC

model = SVC(kernel='linear', C=1)
model.fit(X_train, y_train)
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

y_pred = model.predict(X_test)

accuracy = accuracy_score(y_test, y_pred)
conf_matrix = confusion_matrix(y_test, y_pred)
class_report = classification_report(y_test, y_pred, target_names=iris.target_names)

print(f'Accuracy: {accuracy:.2f}')
print('Confusion Matrix:\n', conf_matrix)
print('Classification Report:\n', class_report)
# Predict the species for a new set of measurements
new_measurements = [[5.1, 3.5, 1.4, 0.2]]  # Replace with your own measurements
predicted_species = model.predict(new_measurements)
print(f'Predicted Species: {iris.target_names[predicted_species][0]}')
